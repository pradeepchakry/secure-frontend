{"ast":null,"code":"/**\n * Copyright Schrodinger, LLC\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule ExecutionEnvironment\n */\n\n/*jslint evil: true */\n'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\nvar canUseDOM = !!(typeof window !== 'undefined' && window.document && window.document.createElement);\n/**\n * Simple, lightweight module assisting with the detection and context of\n * Worker. Helps avoid circular dependencies and allows code to reason about\n * whether or not they are in a Worker, even if they never include the main\n * `ReactWorker` dependency.\n */\n\nvar ExecutionEnvironment = {\n  canUseDOM: canUseDOM,\n  canUseWorkers: typeof Worker !== 'undefined',\n  canUseEventListeners: canUseDOM && !!(window.addEventListener || window.attachEvent),\n  canUseViewport: canUseDOM && !!window.screen,\n  isInWorker: !canUseDOM // For now, this is true - might change in the future.\n\n};\nvar _default = ExecutionEnvironment;\nexports[\"default\"] = _default;","map":{"version":3,"sources":["/home/discovery/Documents/secure-frontend/node_modules/fixed-data-table-2/internal/ExecutionEnvironment.js"],"names":["Object","defineProperty","exports","value","canUseDOM","window","document","createElement","ExecutionEnvironment","canUseWorkers","Worker","canUseEventListeners","addEventListener","attachEvent","canUseViewport","screen","isInWorker","_default"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEAA,MAAM,CAACC,cAAP,CAAsBC,OAAtB,EAA+B,YAA/B,EAA6C;AAC3CC,EAAAA,KAAK,EAAE;AADoC,CAA7C;AAGAD,OAAO,CAAC,SAAD,CAAP,GAAqB,KAAK,CAA1B;AACA,IAAIE,SAAS,GAAG,CAAC,EAAE,OAAOC,MAAP,KAAkB,WAAlB,IAAiCA,MAAM,CAACC,QAAxC,IAAoDD,MAAM,CAACC,QAAP,CAAgBC,aAAtE,CAAjB;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,IAAIC,oBAAoB,GAAG;AACzBJ,EAAAA,SAAS,EAAEA,SADc;AAEzBK,EAAAA,aAAa,EAAE,OAAOC,MAAP,KAAkB,WAFR;AAGzBC,EAAAA,oBAAoB,EAAEP,SAAS,IAAI,CAAC,EAAEC,MAAM,CAACO,gBAAP,IAA2BP,MAAM,CAACQ,WAApC,CAHX;AAIzBC,EAAAA,cAAc,EAAEV,SAAS,IAAI,CAAC,CAACC,MAAM,CAACU,MAJb;AAKzBC,EAAAA,UAAU,EAAE,CAACZ,SALY,CAKF;;AALE,CAA3B;AAQA,IAAIa,QAAQ,GAAGT,oBAAf;AACAN,OAAO,CAAC,SAAD,CAAP,GAAqBe,QAArB","sourcesContent":["/**\n * Copyright Schrodinger, LLC\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule ExecutionEnvironment\n */\n\n/*jslint evil: true */\n'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\nvar canUseDOM = !!(typeof window !== 'undefined' && window.document && window.document.createElement);\n/**\n * Simple, lightweight module assisting with the detection and context of\n * Worker. Helps avoid circular dependencies and allows code to reason about\n * whether or not they are in a Worker, even if they never include the main\n * `ReactWorker` dependency.\n */\n\nvar ExecutionEnvironment = {\n  canUseDOM: canUseDOM,\n  canUseWorkers: typeof Worker !== 'undefined',\n  canUseEventListeners: canUseDOM && !!(window.addEventListener || window.attachEvent),\n  canUseViewport: canUseDOM && !!window.screen,\n  isInWorker: !canUseDOM // For now, this is true - might change in the future.\n\n};\nvar _default = ExecutionEnvironment;\nexports[\"default\"] = _default;"]},"metadata":{},"sourceType":"script"}