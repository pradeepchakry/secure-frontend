{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\n/**\n * Copyright Schrodinger, LLC\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule clamp\n * @typechecks\n */\n\n/**\n * Clamps (or clips or confines) the value to be between min and max.\n * @param {number} value\n * @param {number} min\n * @param {number} max\n * @return {number}\n */\n\nfunction clamp(value, min, max) {\n  if (value < min) {\n    return min;\n  }\n\n  if (value > max) {\n    return max;\n  }\n\n  return value;\n}\n\nvar _default = clamp;\nexports[\"default\"] = _default;","map":{"version":3,"sources":["/home/discovery/Documents/secure-frontend/node_modules/fixed-data-table-2/internal/clamp.js"],"names":["Object","defineProperty","exports","value","clamp","min","max","_default"],"mappings":"AAAA;;AAEAA,MAAM,CAACC,cAAP,CAAsBC,OAAtB,EAA+B,YAA/B,EAA6C;AAC3CC,EAAAA,KAAK,EAAE;AADoC,CAA7C;AAGAD,OAAO,CAAC,SAAD,CAAP,GAAqB,KAAK,CAA1B;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,SAASE,KAAT,CAAeD,KAAf,EAAsBE,GAAtB,EAA2BC,GAA3B,EAAgC;AAC9B,MAAIH,KAAK,GAAGE,GAAZ,EAAiB;AACf,WAAOA,GAAP;AACD;;AAED,MAAIF,KAAK,GAAGG,GAAZ,EAAiB;AACf,WAAOA,GAAP;AACD;;AAED,SAAOH,KAAP;AACD;;AAED,IAAII,QAAQ,GAAGH,KAAf;AACAF,OAAO,CAAC,SAAD,CAAP,GAAqBK,QAArB","sourcesContent":["\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\n\n/**\n * Copyright Schrodinger, LLC\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule clamp\n * @typechecks\n */\n\n/**\n * Clamps (or clips or confines) the value to be between min and max.\n * @param {number} value\n * @param {number} min\n * @param {number} max\n * @return {number}\n */\nfunction clamp(value, min, max) {\n  if (value < min) {\n    return min;\n  }\n\n  if (value > max) {\n    return max;\n  }\n\n  return value;\n}\n\nvar _default = clamp;\nexports[\"default\"] = _default;"]},"metadata":{},"sourceType":"script"}