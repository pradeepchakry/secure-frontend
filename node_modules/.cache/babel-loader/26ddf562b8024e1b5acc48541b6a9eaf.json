{"ast":null,"code":"/**\n * Copyright Schrodinger, LLC\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule columnStateHelper\n */\n'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\n\nvar _emptyFunction = _interopRequireDefault(require('./emptyFunction'));\n\nvar _isNil = _interopRequireDefault(require('lodash/isNil'));\n\nvar _columnWidths5 = _interopRequireDefault(require('./columnWidths'));\n\nvar _clamp = _interopRequireDefault(require('lodash/clamp'));\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    \"default\": obj\n  };\n}\n\nfunction _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nvar DRAG_SCROLL_SPEED = 15;\nvar DRAG_SCROLL_BUFFER = 100;\n/**\n * Initialize scrollX state\n * TODO (jordan) Audit this method for cases where deep values are not properly cloned\n *\n * @param {!Object} state\n * @param {!Object} props\n * @param {Object} oldProps\n * @return {!Object}\n */\n\nfunction initialize(state, props, oldProps) {\n  var scrollLeft = props.scrollLeft,\n      scrollToColumn = props.scrollToColumn;\n  var columnResizingData = state.columnResizingData,\n      isColumnResizing = state.isColumnResizing,\n      scrollX = state.scrollX;\n\n  if (scrollLeft !== undefined && (!oldProps || scrollLeft !== oldProps.scrollLeft)) {\n    scrollX = scrollLeft;\n  }\n\n  scrollX = scrollTo(state, props, oldProps.scrollToColumn, scrollX);\n\n  var _columnWidths = (0, _columnWidths5[\"default\"])(state),\n      maxScrollX = _columnWidths.maxScrollX;\n\n  scrollX = (0, _clamp[\"default\"])(scrollX, 0, maxScrollX); // isColumnResizing should be overwritten by value from props if available\n\n  isColumnResizing = props.isColumnResizing !== undefined ? props.isColumnResizing : isColumnResizing;\n  columnResizingData = isColumnResizing ? columnResizingData : {};\n  return _extends({}, state, {\n    columnResizingData: columnResizingData,\n    isColumnResizing: isColumnResizing,\n    maxScrollX: maxScrollX,\n    scrollX: scrollX\n  });\n}\n/**\n * @param {!Object} state\n * @param {{\n *   scrollToColumn: number,\n *   width: number,\n * }} props\n * @param {number} oldScrollToColumn\n * @param {number} scrollX\n * @return {number} The new scrollX\n */\n\n\nfunction scrollTo(state, props, oldScrollToColumn, scrollX) {\n  var scrollToColumn = props.scrollToColumn;\n\n  if ((0, _isNil[\"default\"])(scrollToColumn)) {\n    return scrollX;\n  }\n\n  var _columnWidths2 = (0, _columnWidths5[\"default\"])(state),\n      availableScrollWidth = _columnWidths2.availableScrollWidth,\n      fixedColumns = _columnWidths2.fixedColumns,\n      scrollableColumns = _columnWidths2.scrollableColumns;\n\n  var fixedColumnsCount = fixedColumns.length;\n  var scrollableColumnsCount = scrollableColumns.length;\n  var noScrollableColumns = scrollableColumnsCount === 0;\n  var scrollToUnchanged = scrollToColumn === oldScrollToColumn;\n  var selectedColumnFixed = scrollToColumn < fixedColumnsCount;\n  var selectedColumnFixedRight = scrollToColumn >= fixedColumnsCount + scrollableColumnsCount;\n\n  if (scrollToUnchanged || selectedColumnFixed || selectedColumnFixedRight || noScrollableColumns) {\n    return scrollX;\n  } // Convert column index (0 indexed) to scrollable index (0 indexed)\n  // and clamp to max scrollable index\n\n\n  var clampedColumnIndex = Math.min(scrollToColumn - fixedColumnsCount, scrollableColumns.length - 1); // Compute the width of all columns to the left of the column\n\n  var previousWidth = 0;\n\n  for (var columnIdx = 0; columnIdx < clampedColumnIndex; ++columnIdx) {\n    previousWidth += scrollableColumns[columnIdx].width;\n  } // Get width of specified column\n\n\n  var selectedColumnWidth = scrollableColumns[clampedColumnIndex].width; // Compute the scroll position which sets the column on the right of the viewport\n  // Must scroll at least far enough for end of column (previousWidth + selectedColumnWidth)\n  // to be in viewport.\n\n  var minScrollPosition = previousWidth + selectedColumnWidth - availableScrollWidth; // Handle offscreen to the left\n  // If scrolled less than minimum amount, scroll to minimum amount\n  // so column on right of viewport\n\n  if (scrollX < minScrollPosition) {\n    return minScrollPosition;\n  } // Handle offscreen to the right\n  // If scrolled more than previous columns, at least part of column will be offscreen to left\n  // Scroll so column is flush with left edge of viewport\n\n\n  if (scrollX > previousWidth) {\n    return previousWidth;\n  }\n\n  return scrollX;\n}\n/**\n * This is called when a cell that is in the header of a column has its\n * resizer knob clicked on. It displays the resizer and puts in the correct\n * location on the table.\n */\n\n\nfunction resizeColumn(state, resizeData) {\n  var cellMinWidth = resizeData.cellMinWidth,\n      cellMaxWidth = resizeData.cellMaxWidth,\n      cellWidth = resizeData.cellWidth,\n      columnKey = resizeData.columnKey,\n      combinedWidth = resizeData.combinedWidth,\n      clientX = resizeData.clientX,\n      clientY = resizeData.clientY,\n      leftOffset = resizeData.leftOffset;\n  return _extends({}, state, {\n    isColumnResizing: true,\n    columnResizingData: {\n      left: leftOffset + combinedWidth - cellWidth,\n      width: cellWidth,\n      minWidth: cellMinWidth,\n      maxWidth: cellMaxWidth,\n      initialEvent: {\n        clientX: clientX,\n        clientY: clientY,\n        preventDefault: _emptyFunction[\"default\"]\n      },\n      key: columnKey\n    }\n  });\n}\n\nfunction reorderColumn(state, reorderData) {\n  var columnKey = reorderData.columnKey,\n      left = reorderData.left,\n      scrollStart = reorderData.scrollStart,\n      width = reorderData.width;\n\n  var _columnWidths3 = (0, _columnWidths5[\"default\"])(state),\n      fixedColumns = _columnWidths3.fixedColumns;\n\n  var isFixed = fixedColumns.some(function (column) {\n    return column.columnKey === columnKey;\n  });\n  return _extends({}, state, {\n    isColumnReordering: true,\n    columnReorderingData: {\n      cancelReorder: false,\n      dragDistance: 0,\n      isFixed: isFixed,\n      scrollStart: scrollStart,\n      columnKey: columnKey,\n      columnWidth: width,\n      originalLeft: left,\n      columnBefore: undefined,\n      columnAfter: undefined\n    }\n  });\n}\n\nfunction reorderColumnMove(state, deltaX) {\n  var _state$columnReorderi = state.columnReorderingData,\n      isFixed = _state$columnReorderi.isFixed,\n      originalLeft = _state$columnReorderi.originalLeft,\n      scrollStart = _state$columnReorderi.scrollStart;\n  var maxScrollX = state.maxScrollX,\n      scrollX = state.scrollX;\n\n  if (!isFixed) {\n    // Relative dragX position on scroll\n    var dragX = originalLeft - scrollStart + deltaX;\n\n    var _columnWidths4 = (0, _columnWidths5[\"default\"])(state),\n        availableScrollWidth = _columnWidths4.availableScrollWidth;\n\n    deltaX += scrollX - scrollStart; // Scroll the table left or right if we drag near the edges of the table\n\n    if (dragX > availableScrollWidth - DRAG_SCROLL_BUFFER) {\n      scrollX = Math.min(scrollX + DRAG_SCROLL_SPEED, maxScrollX);\n    } else if (dragX <= DRAG_SCROLL_BUFFER) {\n      scrollX = Math.max(scrollX - DRAG_SCROLL_SPEED, 0);\n    }\n  } // NOTE (jordan) Need to clone this object when use pureRendering\n\n\n  var reorderingData = _extends({}, state.columnReorderingData, {\n    dragDistance: deltaX,\n    columnBefore: undefined,\n    columnAfter: undefined\n  });\n\n  return _extends({}, state, {\n    scrollX: scrollX,\n    columnReorderingData: reorderingData\n  });\n}\n\nvar _default = {\n  initialize: initialize,\n  reorderColumn: reorderColumn,\n  reorderColumnMove: reorderColumnMove,\n  resizeColumn: resizeColumn\n};\nexports[\"default\"] = _default;","map":{"version":3,"sources":["/home/discovery/Documents/secure-frontend/node_modules/fixed-data-table-2/internal/columnStateHelper.js"],"names":["Object","defineProperty","exports","value","_emptyFunction","_interopRequireDefault","require","_isNil","_columnWidths5","_clamp","obj","__esModule","_extends","assign","target","i","arguments","length","source","key","prototype","hasOwnProperty","call","apply","DRAG_SCROLL_SPEED","DRAG_SCROLL_BUFFER","initialize","state","props","oldProps","scrollLeft","scrollToColumn","columnResizingData","isColumnResizing","scrollX","undefined","scrollTo","_columnWidths","maxScrollX","oldScrollToColumn","_columnWidths2","availableScrollWidth","fixedColumns","scrollableColumns","fixedColumnsCount","scrollableColumnsCount","noScrollableColumns","scrollToUnchanged","selectedColumnFixed","selectedColumnFixedRight","clampedColumnIndex","Math","min","previousWidth","columnIdx","width","selectedColumnWidth","minScrollPosition","resizeColumn","resizeData","cellMinWidth","cellMaxWidth","cellWidth","columnKey","combinedWidth","clientX","clientY","leftOffset","left","minWidth","maxWidth","initialEvent","preventDefault","reorderColumn","reorderData","scrollStart","_columnWidths3","isFixed","some","column","isColumnReordering","columnReorderingData","cancelReorder","dragDistance","columnWidth","originalLeft","columnBefore","columnAfter","reorderColumnMove","deltaX","_state$columnReorderi","dragX","_columnWidths4","max","reorderingData","_default"],"mappings":"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","sourcesContent":["/**\n * Copyright Schrodinger, LLC\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule columnStateHelper\n */\n'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\n\nvar _emptyFunction = _interopRequireDefault(require('./emptyFunction'));\n\nvar _isNil = _interopRequireDefault(require('lodash/isNil'));\n\nvar _columnWidths5 = _interopRequireDefault(require('./columnWidths'));\n\nvar _clamp = _interopRequireDefault(require('lodash/clamp'));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nvar DRAG_SCROLL_SPEED = 15;\nvar DRAG_SCROLL_BUFFER = 100;\n/**\n * Initialize scrollX state\n * TODO (jordan) Audit this method for cases where deep values are not properly cloned\n *\n * @param {!Object} state\n * @param {!Object} props\n * @param {Object} oldProps\n * @return {!Object}\n */\n\nfunction initialize(state, props, oldProps) {\n  var scrollLeft = props.scrollLeft,\n      scrollToColumn = props.scrollToColumn;\n  var columnResizingData = state.columnResizingData,\n      isColumnResizing = state.isColumnResizing,\n      scrollX = state.scrollX;\n\n  if (scrollLeft !== undefined && (!oldProps || scrollLeft !== oldProps.scrollLeft)) {\n    scrollX = scrollLeft;\n  }\n\n  scrollX = scrollTo(state, props, oldProps.scrollToColumn, scrollX);\n\n  var _columnWidths = (0, _columnWidths5[\"default\"])(state),\n      maxScrollX = _columnWidths.maxScrollX;\n\n  scrollX = (0, _clamp[\"default\"])(scrollX, 0, maxScrollX); // isColumnResizing should be overwritten by value from props if available\n\n  isColumnResizing = props.isColumnResizing !== undefined ? props.isColumnResizing : isColumnResizing;\n  columnResizingData = isColumnResizing ? columnResizingData : {};\n  return _extends({}, state, {\n    columnResizingData: columnResizingData,\n    isColumnResizing: isColumnResizing,\n    maxScrollX: maxScrollX,\n    scrollX: scrollX\n  });\n}\n/**\n * @param {!Object} state\n * @param {{\n *   scrollToColumn: number,\n *   width: number,\n * }} props\n * @param {number} oldScrollToColumn\n * @param {number} scrollX\n * @return {number} The new scrollX\n */\n\n\nfunction scrollTo(state, props, oldScrollToColumn, scrollX) {\n  var scrollToColumn = props.scrollToColumn;\n\n  if ((0, _isNil[\"default\"])(scrollToColumn)) {\n    return scrollX;\n  }\n\n  var _columnWidths2 = (0, _columnWidths5[\"default\"])(state),\n      availableScrollWidth = _columnWidths2.availableScrollWidth,\n      fixedColumns = _columnWidths2.fixedColumns,\n      scrollableColumns = _columnWidths2.scrollableColumns;\n\n  var fixedColumnsCount = fixedColumns.length;\n  var scrollableColumnsCount = scrollableColumns.length;\n  var noScrollableColumns = scrollableColumnsCount === 0;\n  var scrollToUnchanged = scrollToColumn === oldScrollToColumn;\n  var selectedColumnFixed = scrollToColumn < fixedColumnsCount;\n  var selectedColumnFixedRight = scrollToColumn >= fixedColumnsCount + scrollableColumnsCount;\n\n  if (scrollToUnchanged || selectedColumnFixed || selectedColumnFixedRight || noScrollableColumns) {\n    return scrollX;\n  } // Convert column index (0 indexed) to scrollable index (0 indexed)\n  // and clamp to max scrollable index\n\n\n  var clampedColumnIndex = Math.min(scrollToColumn - fixedColumnsCount, scrollableColumns.length - 1); // Compute the width of all columns to the left of the column\n\n  var previousWidth = 0;\n\n  for (var columnIdx = 0; columnIdx < clampedColumnIndex; ++columnIdx) {\n    previousWidth += scrollableColumns[columnIdx].width;\n  } // Get width of specified column\n\n\n  var selectedColumnWidth = scrollableColumns[clampedColumnIndex].width; // Compute the scroll position which sets the column on the right of the viewport\n  // Must scroll at least far enough for end of column (previousWidth + selectedColumnWidth)\n  // to be in viewport.\n\n  var minScrollPosition = previousWidth + selectedColumnWidth - availableScrollWidth; // Handle offscreen to the left\n  // If scrolled less than minimum amount, scroll to minimum amount\n  // so column on right of viewport\n\n  if (scrollX < minScrollPosition) {\n    return minScrollPosition;\n  } // Handle offscreen to the right\n  // If scrolled more than previous columns, at least part of column will be offscreen to left\n  // Scroll so column is flush with left edge of viewport\n\n\n  if (scrollX > previousWidth) {\n    return previousWidth;\n  }\n\n  return scrollX;\n}\n/**\n * This is called when a cell that is in the header of a column has its\n * resizer knob clicked on. It displays the resizer and puts in the correct\n * location on the table.\n */\n\n\nfunction resizeColumn(state, resizeData) {\n  var cellMinWidth = resizeData.cellMinWidth,\n      cellMaxWidth = resizeData.cellMaxWidth,\n      cellWidth = resizeData.cellWidth,\n      columnKey = resizeData.columnKey,\n      combinedWidth = resizeData.combinedWidth,\n      clientX = resizeData.clientX,\n      clientY = resizeData.clientY,\n      leftOffset = resizeData.leftOffset;\n  return _extends({}, state, {\n    isColumnResizing: true,\n    columnResizingData: {\n      left: leftOffset + combinedWidth - cellWidth,\n      width: cellWidth,\n      minWidth: cellMinWidth,\n      maxWidth: cellMaxWidth,\n      initialEvent: {\n        clientX: clientX,\n        clientY: clientY,\n        preventDefault: _emptyFunction[\"default\"]\n      },\n      key: columnKey\n    }\n  });\n}\n\nfunction reorderColumn(state, reorderData) {\n  var columnKey = reorderData.columnKey,\n      left = reorderData.left,\n      scrollStart = reorderData.scrollStart,\n      width = reorderData.width;\n\n  var _columnWidths3 = (0, _columnWidths5[\"default\"])(state),\n      fixedColumns = _columnWidths3.fixedColumns;\n\n  var isFixed = fixedColumns.some(function (column) {\n    return column.columnKey === columnKey;\n  });\n  return _extends({}, state, {\n    isColumnReordering: true,\n    columnReorderingData: {\n      cancelReorder: false,\n      dragDistance: 0,\n      isFixed: isFixed,\n      scrollStart: scrollStart,\n      columnKey: columnKey,\n      columnWidth: width,\n      originalLeft: left,\n      columnBefore: undefined,\n      columnAfter: undefined\n    }\n  });\n}\n\nfunction reorderColumnMove(state, deltaX) {\n  var _state$columnReorderi = state.columnReorderingData,\n      isFixed = _state$columnReorderi.isFixed,\n      originalLeft = _state$columnReorderi.originalLeft,\n      scrollStart = _state$columnReorderi.scrollStart;\n  var maxScrollX = state.maxScrollX,\n      scrollX = state.scrollX;\n\n  if (!isFixed) {\n    // Relative dragX position on scroll\n    var dragX = originalLeft - scrollStart + deltaX;\n\n    var _columnWidths4 = (0, _columnWidths5[\"default\"])(state),\n        availableScrollWidth = _columnWidths4.availableScrollWidth;\n\n    deltaX += scrollX - scrollStart; // Scroll the table left or right if we drag near the edges of the table\n\n    if (dragX > availableScrollWidth - DRAG_SCROLL_BUFFER) {\n      scrollX = Math.min(scrollX + DRAG_SCROLL_SPEED, maxScrollX);\n    } else if (dragX <= DRAG_SCROLL_BUFFER) {\n      scrollX = Math.max(scrollX - DRAG_SCROLL_SPEED, 0);\n    }\n  } // NOTE (jordan) Need to clone this object when use pureRendering\n\n\n  var reorderingData = _extends({}, state.columnReorderingData, {\n    dragDistance: deltaX,\n    columnBefore: undefined,\n    columnAfter: undefined\n  });\n\n  return _extends({}, state, {\n    scrollX: scrollX,\n    columnReorderingData: reorderingData\n  });\n}\n\nvar _default = {\n  initialize: initialize,\n  reorderColumn: reorderColumn,\n  reorderColumnMove: reorderColumnMove,\n  resizeColumn: resizeColumn\n};\nexports[\"default\"] = _default;"]},"metadata":{},"sourceType":"script"}